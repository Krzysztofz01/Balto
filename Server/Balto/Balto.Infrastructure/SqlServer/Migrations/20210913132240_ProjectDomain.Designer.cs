// <auto-generated />
using System;
using Balto.Infrastructure.SqlServer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Balto.Infrastructure.SqlServer.Migrations
{
    [DbContext(typeof(BaltoDbContext))]
    [Migration("20210913132240_ProjectDomain")]
    partial class ProjectDomain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("balto")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Balto.Domain.Aggregates.Note.Note", b =>
                {
                    b.Property<Guid>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.HasKey("NoteId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Balto.Domain.Aggregates.Objective.Objective", b =>
                {
                    b.Property<Guid>("ObjectiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ObjectiveId");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("Balto.Domain.Aggregates.Project.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Balto.Domain.Aggregates.User.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Balto.Domain.Aggregates.Note.Note", b =>
                {
                    b.OwnsOne("Balto.Domain.Aggregates.Note.NoteContent", "Content", b1 =>
                        {
                            b1.Property<Guid>("NoteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("NoteId");

                            b1.ToTable("Notes");

                            b1.WithOwner()
                                .HasForeignKey("NoteId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Note.NoteId", "Id", b1 =>
                        {
                            b1.Property<Guid>("NoteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("NoteId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[Id_Value] IS NOT NULL");

                            b1.ToTable("Notes");

                            b1.WithOwner()
                                .HasForeignKey("NoteId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Note.NoteOwnerId", "OwnerId", b1 =>
                        {
                            b1.Property<Guid>("NoteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("NoteId");

                            b1.ToTable("Notes");

                            b1.WithOwner()
                                .HasForeignKey("NoteId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Note.NoteTitle", "Title", b1 =>
                        {
                            b1.Property<Guid>("NoteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("NoteId");

                            b1.ToTable("Notes");

                            b1.WithOwner()
                                .HasForeignKey("NoteId");
                        });

                    b.OwnsMany("Balto.Domain.Aggregates.Note.NoteContributor", "Contributors", b1 =>
                        {
                            b1.Property<Guid>("NoteContributorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifedAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("noteId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("NoteContributorId");

                            b1.HasIndex("noteId");

                            b1.ToTable("NoteContributor");

                            b1.WithOwner()
                                .HasForeignKey("noteId");

                            b1.OwnsOne("Balto.Domain.Aggregates.Note.NoteContributorId", "Id", b2 =>
                                {
                                    b2.Property<Guid>("NoteContributorId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("NoteContributorId");

                                    b2.HasIndex("Value")
                                        .IsUnique()
                                        .HasFilter("[Id_Value] IS NOT NULL");

                                    b2.ToTable("NoteContributor");

                                    b2.WithOwner()
                                        .HasForeignKey("NoteContributorId");
                                });

                            b1.Navigation("Id");
                        });

                    b.Navigation("Content");

                    b.Navigation("Contributors");

                    b.Navigation("Id");

                    b.Navigation("OwnerId");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Balto.Domain.Aggregates.Objective.Objective", b =>
                {
                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectiveDescription", "Description", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectiveEndingDate", "EndingDate", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("datetime2");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectiveFinishState", "FinishState", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("State")
                                .HasColumnType("bit");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectiveId", "Id", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ObjectiveId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[Id_Value] IS NOT NULL");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectiveOwnerId", "OwnerId", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectivePeriodicity", "Periodicity", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectivePriority", "Priority", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectiveStartingDate", "StartingDate", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("datetime2");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Objective.ObjectiveTitle", "Title", b1 =>
                        {
                            b1.Property<Guid>("ObjectiveId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ObjectiveId");

                            b1.ToTable("Objectives");

                            b1.WithOwner()
                                .HasForeignKey("ObjectiveId");
                        });

                    b.Navigation("Description");

                    b.Navigation("EndingDate");

                    b.Navigation("FinishState");

                    b.Navigation("Id");

                    b.Navigation("OwnerId");

                    b.Navigation("Periodicity");

                    b.Navigation("Priority");

                    b.Navigation("StartingDate");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Balto.Domain.Aggregates.Project.Project", b =>
                {
                    b.OwnsOne("Balto.Domain.Aggregates.Project.ProjectId", "Id", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ProjectId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[Id_Value] IS NOT NULL");

                            b1.ToTable("Projects");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Project.ProjectOwnerId", "OwnerId", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ProjectId");

                            b1.ToTable("Projects");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Project.ProjectTicketToken", "TicketToken", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("ProjectId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[TicketToken_Value] IS NOT NULL");

                            b1.ToTable("Projects");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.Project.ProjectTitle", "Title", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProjectId");

                            b1.ToTable("Projects");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.OwnsMany("Balto.Domain.Aggregates.Project.ProjectContributor", "Contributors", b1 =>
                        {
                            b1.Property<Guid>("ProjectContributorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifedAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("projectId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ProjectContributorId");

                            b1.HasIndex("projectId");

                            b1.ToTable("ProjectContributor");

                            b1.WithOwner()
                                .HasForeignKey("projectId");

                            b1.OwnsOne("Balto.Domain.Aggregates.Project.ProjectContributorId", "Id", b2 =>
                                {
                                    b2.Property<Guid>("ProjectContributorId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("ProjectContributorId");

                                    b2.HasIndex("Value")
                                        .IsUnique()
                                        .HasFilter("[Id_Value] IS NOT NULL");

                                    b2.ToTable("ProjectContributor");

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectContributorId");
                                });

                            b1.Navigation("Id");
                        });

                    b.OwnsMany("Balto.Domain.Aggregates.Project.Table.ProjectTable", "Tables", b1 =>
                        {
                            b1.Property<Guid>("TableId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifedAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("projectId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("TableId");

                            b1.HasIndex("projectId");

                            b1.ToTable("ProjectTable");

                            b1.WithOwner()
                                .HasForeignKey("projectId");

                            b1.OwnsOne("Balto.Domain.Aggregates.Project.Table.ProjectTableColor", "Color", b2 =>
                                {
                                    b2.Property<Guid>("ProjectTableTableId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Value")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProjectTableTableId");

                                    b2.ToTable("ProjectTable");

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectTableTableId");
                                });

                            b1.OwnsOne("Balto.Domain.Aggregates.Project.Table.ProjectTableId", "Id", b2 =>
                                {
                                    b2.Property<Guid>("ProjectTableTableId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("ProjectTableTableId");

                                    b2.HasIndex("Value")
                                        .IsUnique()
                                        .HasFilter("[Id_Value] IS NOT NULL");

                                    b2.ToTable("ProjectTable");

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectTableTableId");
                                });

                            b1.OwnsOne("Balto.Domain.Aggregates.Project.Table.ProjectTableTitle", "Title", b2 =>
                                {
                                    b2.Property<Guid>("ProjectTableTableId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Value")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProjectTableTableId");

                                    b2.ToTable("ProjectTable");

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectTableTableId");
                                });

                            b1.OwnsMany("Balto.Domain.Aggregates.Project.Card.ProjectTableCard", "Cards", b2 =>
                                {
                                    b2.Property<Guid>("CardId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<DateTime>("CreatedAt")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime?>("DeletedAt")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime>("ModifedAt")
                                        .HasColumnType("datetime2");

                                    b2.Property<int>("OrdinalNumber")
                                        .HasColumnType("int");

                                    b2.Property<Guid>("tableId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("CardId");

                                    b2.HasIndex("tableId");

                                    b2.ToTable("ProjectTableCard");

                                    b2.WithOwner()
                                        .HasForeignKey("tableId");

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardColor", "Color", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Value")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardContent", "Content", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Value")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardCreatorId", "CreatorId", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<Guid>("Value")
                                                .HasColumnType("uniqueidentifier");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardDeadline", "Deadline", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<DateTime?>("Date")
                                                .HasColumnType("datetime2");

                                            b3.Property<bool>("Notify")
                                                .HasColumnType("bit");

                                            b3.Property<Guid?>("UserId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardFinished", "Finished", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<bool>("Finished")
                                                .HasColumnType("bit");

                                            b3.Property<Guid?>("FinishedBy")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<DateTime?>("FinishedOn")
                                                .HasColumnType("datetime2");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardId", "Id", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<Guid>("Value")
                                                .HasColumnType("uniqueidentifier");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.HasIndex("Value")
                                                .IsUnique()
                                                .HasFilter("[Id_Value] IS NOT NULL");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardPriority", "Priority", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<int>("Value")
                                                .HasColumnType("int");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardStartingDate", "StartingDate", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<DateTime>("Value")
                                                .HasColumnType("datetime2");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardTitle", "Title", b3 =>
                                        {
                                            b3.Property<Guid>("ProjectTableCardCardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Value")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ProjectTableCardCardId");

                                            b3.ToTable("ProjectTableCard");

                                            b3.WithOwner()
                                                .HasForeignKey("ProjectTableCardCardId");
                                        });

                                    b2.OwnsMany("Balto.Domain.Aggregates.Project.Card.ProjectTableCardComment", "Comments", b3 =>
                                        {
                                            b3.Property<Guid>("CommentId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<DateTime>("CreatedAt")
                                                .HasColumnType("datetime2");

                                            b3.Property<DateTime?>("DeletedAt")
                                                .HasColumnType("datetime2");

                                            b3.Property<DateTime>("ModifedAt")
                                                .HasColumnType("datetime2");

                                            b3.Property<Guid>("cardId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.HasKey("CommentId");

                                            b3.HasIndex("cardId");

                                            b3.ToTable("ProjectTableCardComment");

                                            b3.WithOwner()
                                                .HasForeignKey("cardId");

                                            b3.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardCommentContent", "Content", b4 =>
                                                {
                                                    b4.Property<Guid>("ProjectTableCardCommentCommentId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.HasKey("ProjectTableCardCommentCommentId");

                                                    b4.ToTable("ProjectTableCardComment");

                                                    b4.WithOwner()
                                                        .HasForeignKey("ProjectTableCardCommentCommentId");
                                                });

                                            b3.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardCommentCreateDate", "CreateDate", b4 =>
                                                {
                                                    b4.Property<Guid>("ProjectTableCardCommentCommentId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<DateTime>("Value")
                                                        .HasColumnType("datetime2");

                                                    b4.HasKey("ProjectTableCardCommentCommentId");

                                                    b4.ToTable("ProjectTableCardComment");

                                                    b4.WithOwner()
                                                        .HasForeignKey("ProjectTableCardCommentCommentId");
                                                });

                                            b3.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardCommentCreatorId", "CreatorId", b4 =>
                                                {
                                                    b4.Property<Guid>("ProjectTableCardCommentCommentId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<Guid>("Value")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.HasKey("ProjectTableCardCommentCommentId");

                                                    b4.ToTable("ProjectTableCardComment");

                                                    b4.WithOwner()
                                                        .HasForeignKey("ProjectTableCardCommentCommentId");
                                                });

                                            b3.OwnsOne("Balto.Domain.Aggregates.Project.Card.ProjectTableCardCommentId", "Id", b4 =>
                                                {
                                                    b4.Property<Guid>("ProjectTableCardCommentCommentId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<Guid>("Value")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.HasKey("ProjectTableCardCommentCommentId");

                                                    b4.HasIndex("Value")
                                                        .IsUnique()
                                                        .HasFilter("[Id_Value] IS NOT NULL");

                                                    b4.ToTable("ProjectTableCardComment");

                                                    b4.WithOwner()
                                                        .HasForeignKey("ProjectTableCardCommentCommentId");
                                                });

                                            b3.Navigation("Content");

                                            b3.Navigation("CreateDate");

                                            b3.Navigation("CreatorId");

                                            b3.Navigation("Id");
                                        });

                                    b2.Navigation("Color");

                                    b2.Navigation("Comments");

                                    b2.Navigation("Content");

                                    b2.Navigation("CreatorId");

                                    b2.Navigation("Deadline");

                                    b2.Navigation("Finished");

                                    b2.Navigation("Id");

                                    b2.Navigation("Priority");

                                    b2.Navigation("StartingDate");

                                    b2.Navigation("Title");
                                });

                            b1.Navigation("Cards");

                            b1.Navigation("Color");

                            b1.Navigation("Id");

                            b1.Navigation("Title");
                        });

                    b.Navigation("Contributors");

                    b.Navigation("Id");

                    b.Navigation("OwnerId");

                    b.Navigation("Tables");

                    b.Navigation("TicketToken");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Balto.Domain.Aggregates.User.User", b =>
                {
                    b.OwnsOne("Balto.Domain.Aggregates.User.UserColor", "Color", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.User.UserEmail", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("UserId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[Email_Value] IS NOT NULL");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.User.UserId", "Id", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("UserId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[Id_Value] IS NOT NULL");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.User.UserLastLogin", "LastLogin", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<string>("IpAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.User.UserName", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.User.UserPassword", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Balto.Domain.Aggregates.User.UserTeamId", "TeamId", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsMany("Balto.Domain.Aggregates.User.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<Guid>("RefreshTokenId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("IsRevoked")
                                .HasColumnType("bit");

                            b1.Property<DateTime>("ModifedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("ownerId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("RefreshTokenId");

                            b1.HasIndex("ownerId");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner()
                                .HasForeignKey("ownerId");

                            b1.OwnsOne("Balto.Domain.Aggregates.User.RefreshTokenId", "Id", b2 =>
                                {
                                    b2.Property<Guid>("RefreshTokenId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("RefreshTokenId");

                                    b2.HasIndex("Value")
                                        .IsUnique()
                                        .HasFilter("[Id_Value] IS NOT NULL");

                                    b2.ToTable("RefreshToken");

                                    b2.WithOwner()
                                        .HasForeignKey("RefreshTokenId");
                                });

                            b1.Navigation("Id");
                        });

                    b.Navigation("Color");

                    b.Navigation("Email");

                    b.Navigation("Id");

                    b.Navigation("LastLogin");

                    b.Navigation("Name");

                    b.Navigation("Password");

                    b.Navigation("RefreshTokens");

                    b.Navigation("TeamId");
                });
#pragma warning restore 612, 618
        }
    }
}
